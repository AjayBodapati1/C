package com.example.desis_to_csv;

import org.springframework.stereotype.Service;

import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

@Service
public class S3FileMetadataService {

    public Map<String, String> extractS3FileMetadata() {
        Map<String, String> metadata = new HashMap<>();

        try {
            String fileUrl = "https://your-bucket.s3.amazonaws.com/sample.csv"; // Replace with your S3 URL
            URL url = new URL(fileUrl);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET"); // Use GET instead of HEAD

            // Read content type and file size
            String contentType = conn.getContentType(); // now will be populated
            int contentLength = conn.getContentLength(); // also now works

            // Read minimal bytes to force the connection to resolve metadata
            try (InputStream is = conn.getInputStream()) {
                while (is.read() != -1) break; // only trigger stream start
            }

            String fileName = url.getPath().substring(url.getPath().lastIndexOf('/') + 1);
            String entityCode = (fileName.length() >= 6) ? fileName.substring(0, 6) : "UNKNOWN";

            double fileSizeKB = contentLength / 1024.0;
            DecimalFormat df = new DecimalFormat("#.##");

            String uploadTime = LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm"));

            metadata.put("filename", fileName);
            metadata.put("uploadTime", uploadTime);
            metadata.put("entityCode", entityCode);
            metadata.put("fileType", contentType != null ? contentType : "unknown");
            metadata.put("fileSize", df.format(fileSizeKB) + " KB");

            conn.disconnect();
        } catch (Exception e) {
            metadata.put("error", "Failed to fetch metadata: " + e.getMessage());
        }

        return metadata;
    }
}