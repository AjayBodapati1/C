import org.springframework.core.io.InputStreamResource;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.*;
import java.util.*;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

@RestController
public class FileConversionController {

    @GetMapping("/download-csv")
    public ResponseEntity<Resource> convertMultipleDesisToCsvAndDownload() throws IOException {

        String[] inputPaths = {
                "C:/downloads/file1.qso",
                "C:/downloads/file2.qso"
        };

        String[] outputPaths = {
                "C:/downloads/output1.csv",
                "C:/downloads/output2.csv"
        };

        for (int i = 0; i < inputPaths.length; i++) {
            convertSingleFile(inputPaths[i], outputPaths[i]);
        }

        // Create ZIP file
        String zipFilePath = "C:/downloads/converted_files.zip";
        try (FileOutputStream fos = new FileOutputStream(zipFilePath);
             ZipOutputStream zos = new ZipOutputStream(fos)) {
            for (String csvPath : outputPaths) {
                File file = new File(csvPath);
                try (FileInputStream fis = new FileInputStream(file)) {
                    ZipEntry zipEntry = new ZipEntry(file.getName());
                    zos.putNextEntry(zipEntry);

                    byte[] buffer = new byte[1024];
                    int len;
                    while ((len = fis.read(buffer)) > 0) {
                        zos.write(buffer, 0, len);
                    }
                }
            }
        }

        // Return ZIP file as downloadable resource
        File zipFile = new File(zipFilePath);
        InputStreamResource resource = new InputStreamResource(new FileInputStream(zipFile));

        return ResponseEntity.ok()
                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=converted_files.zip")
                .contentType(MediaType.parseMediaType("application/zip"))
                .body(resource);
    }

    private void convertSingleFile(String inputPath, String outputPath) throws IOException {
        List<Map<String, String>> records = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader(inputPath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.contains(":")) {
                    String[] segments = line.split("\\*");
                    Map<String, String> row = new LinkedHashMap<>();

                    for (String segment : segments) {
                        String[] kv = segment.split(":", 2);
                        if (kv.length == 2) {
                            row.put(kv[0].trim(), kv[1].trim());
                        }
                    }

                    if (!row.isEmpty()) {
                        records.add(row);
                    }
                }
            }
        }

        Set<String> headersSet = new LinkedHashSet<>();
        for (Map<String, String> map : records) {
            headersSet.addAll(map.keySet());
        }
        List<String> headers = new ArrayList<>(headersSet);

        try (PrintWriter writer = new PrintWriter(new FileWriter(outputPath))) {
            writer.println(String.join(",", headers));
            for (Map<String, String> map : records) {
                List<String> values = new ArrayList<>();
                for (String header : headers) {
                    values.add(map.getOrDefault(header, ""));
                }
                writer.println(String.join(",", values));
            }
        }
    }
}