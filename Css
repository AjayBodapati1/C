package com.example.desis_to_csv;

import com.example.desis_to_csv.model.FileMetadata;
import com.example.desis_to_csv.repository.FileMetadataRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLDecoder;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

@Service
public class S3FileMetadataService {

    @Autowired
    private FileMetadataRepository repository;

    public FileMetadata fetchAndSaveMetadataFromS3() {
        try {
            String s3Url = "https://ecs-s3-fr.dev.echonet/FR%20DEVS3_recon/Initial%20Margin%20EOD%202025.csv?response-content-disposition-attachment&AWSAccessKeyId=userdev%20s3%20recon%20nexgen_rw&Signature=zI28u7220MMQNI1XvJ%20Oc4%3D&Expires=1747712";

            URL url = new URL(s3Url);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("HEAD");

            String contentType = conn.getContentType();
            contentType = (contentType == null || contentType.isBlank()) ? "application/octet-stream" : contentType;

            String decodedPath = URLDecoder.decode(url.getPath(), "UTF-8");
            String fileName = decodedPath.substring(decodedPath.lastIndexOf('/') + 1);
            String[] pathParts = decodedPath.split("/");
            String sourceSystem = pathParts.length >= 2 ? pathParts[pathParts.length - 2] : "unknown";

            String query = url.getQuery();
            String uploadedBy = "unknown";
            for (String param : query.split("&")) {
                if (param.startsWith("AWSAccessKeyId=")) {
                    uploadedBy = URLDecoder.decode(param.split("=")[1], "UTF-8");
                    break;
                }
            }

            String timestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm"));

            FileMetadata metadata = new FileMetadata(fileName, contentType, sourceSystem, uploadedBy, timestamp, s3Url);
            return repository.save(metadata);

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}