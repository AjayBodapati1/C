<button (click)="openForm()">Create</button>

<!-- Popup container -->
<div class="modal" *ngIf="showForm">
  <div class="modal-content">
    <app-form (saved)="onFormSaved($event)" (cancel)="closeForm()"></app-form>
  </div>
</div>

/* Add to styles.css or home.component.css */
.modal {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex; align-items: center; justify-content: center;
}

.modal-content {
  background: white;
  padding: 20px;
  border-radius: 8px;
}

import { Component } from '@angular/core';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html'
})
export class HomeComponent {
  showForm = false;

  openForm() {
    this.showForm = true;
  }

  closeForm() {
    this.showForm = false;
  }

  onFormSaved(name: string) {
    console.log('Form saved with name:', name);
    this.closeForm();  // Hide popup after save
  }
}



import { Component, EventEmitter, Output } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-form',
  standalone: true,
  imports: [],
  templateUrl: './form.component.html'
})
export class FormComponent {
  name: string = '';

  @Output() saved = new EventEmitter<string>();
  @Output() cancel = new EventEmitter<void>();

  constructor(private http: HttpClient) {}

  save() {
    if (!this.name) return;

    this.http.post('http://localhost:8080/api/events', { title: this.name }).subscribe(() => {
      this.saved.emit(this.name);
    });
  }

  cancelForm() {
    this.cancel.emit();
  }
}


<h3>Create New Event</h3>
<input [(ngModel)]="name" placeholder="Enter Name" />
<br />
<button (click)="save()">Save</button>
<button (click)="cancelForm()">Cancel</button>