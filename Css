import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';

@Component({
  selector: 'app-confirm-dialog',
  templateUrl: './confirm-dialog.component.html',
})
export class ConfirmDialogComponent {
  constructor(
    public dialogRef: MatDialogRef<ConfirmDialogComponent>,
    @Inject(MAT_DIALOG_DATA) public data: { message: string }
  ) {}

  onConfirm(): void {
    this.dialogRef.close(true);
  }

  onCancel(): void {
    this.dialogRef.close(false);
  }
}



<h2 mat-dialog-title>Confirm</h2>
<mat-dialog-content>{{ data.message }}</mat-dialog-content>
<mat-dialog-actions align="end">
  <button mat-button (click)="onCancel()">Cancel</button>
  <button mat-raised-button color="warn" (click)="onConfirm()">Delete</button>
</mat-dialog-actions>



import { MatDialog } from '@angular/material/dialog';
import { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component'; // adjust path if needed

constructor(private dialog: MatDialog, private eventService: EventsService) {}

deleteEvent(id: number): void {
  const dialogRef = this.dialog.open(ConfirmDialogComponent, {
    data: {
      message: 'Are you sure you want to delete this event?'
    }
  });

  dialogRef.afterClosed().subscribe(result => {
    if (result) {
      // Call delete API or remove item
      console.log('Deleting event with ID:', id);
      // this.eventService.deleteEvent(id).subscribe(...);
    }
  });
}


<tr *ngFor="let event of events">
  <td>
    <button mat-icon-button mat-fab class="option-button" aria-label="Delete" (click)="deleteEvent(event.id)">
      <mat-icon>delete</mat-icon>
    </button>
  </td>
  <td>{{ event.title }}</td>
</tr>